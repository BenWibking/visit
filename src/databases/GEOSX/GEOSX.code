Target: xml2info
Function: GEOSXCommonPluginInfo::SetupDatabase
Declaration: virtual avtDatabase * GEOSXCommonPluginInfo::SetupDatabase(const char *const *list, int nList, int nBlock);
Definition:
// ****************************************************************************
//  Method: GEOSXCommonPluginInfo::SetupDatabase
//
//  Purpose:
//      Sets up a GEOSX database.
//
//  Arguments:
//      list    A list of file names.
//      nList   The number of timesteps in list.
//      nBlocks The number of blocks in the list.
//
//  Returns:    A GEOSX database from list.
//
//  Programmer: generated by xml2info from codefile
//  Creation:   omitted
//
// ****************************************************************************
#include <vtkNew.h>
#include <vtkXMLDataElement.h>
#include <vtkXMLDataParser.h>

avtDatabase *
GEOSXCommonPluginInfo::SetupDatabase(const char *const *list,
                                   int nList, int /* nBlock */)
{
    avtDatabase *db = NULL;

    // test if this is GEOSX by parsing the file and searching for
    // specific elements that should exist
    vtkNew<vtkXMLDataParser> parser;
    parser->SetFileName(list[0]);
    if(parser->Parse())
    {
        vtkXMLDataElement *root = parser->GetRootElement();
        if(root)
        {
            vtkXMLDataElement *mbdsNode = root->GetNestedElement(0);
            vtkXMLDataElement *grid = mbdsNode->FindNestedElementWithNameAndAttribute(
                    "Block", "name", "backgroundGrid");
            if(grid && grid->FindNestedElementWithNameAndAttribute(
                   "Block", "name", "CellElementRegion"))
            {
                avtSTMDFileFormat **ffl = new avtSTMDFileFormat*[nList];
                for (int i = 0; i < nList; i++)
                {
                    ffl[i] = new avtGEOSXFileFormat(list[i]);
                }
                avtSTMDFileFormatInterface *inter
                       = new avtSTMDFileFormatInterface(ffl, nList);
                db = new avtGenericDatabase(inter);
            }
        }
    }
    return db;
}

